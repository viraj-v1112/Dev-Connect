{"ast":null,"code":"import axios from 'axios';\nimport { URL } from '../URL';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS } from './types';\nimport setAuthToken from '../utils/setAuthToken'; // Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.getItem('token')) {\n    setAuthToken(localStorage.getItem('token'));\n    console.log(localStorage.getItem('token'));\n  }\n\n  try {\n    const res = await axios.get(URL + '/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error.message);\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // export const loadUser = () => async (dispatch) => {\n//   if (localStorage.getItem('token')) {\n//     setAuthToken(localStorage.getItem('token'));\n//     console.log(localStorage.getItem('token'));\n//   }\n//   try {\n//     const res = await axios.get(URL + '/api/auth');\n//     dispatch({\n//       type: USER_LOADED,\n//       payload: res.data,\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: AUTH_ERROR,\n//     });\n//   }\n// };\n//Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(URL + '/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; //Login User\n\nexport const login = (email, password) => async dispatch => {\n  const body = {\n    email,\n    password\n  };\n\n  try {\n    const res = await axios.post(URL + '/api/auth', body);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/DARSHIL/Desktop/DevConnect/client/src/actions/auth.js"],"names":["axios","URL","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","setAuthToken","loadUser","dispatch","localStorage","getItem","console","log","res","get","type","payload","data","error","message","register","name","email","password","config","headers","body","JSON","stringify","post","err","errors","response","forEach","msg","login"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { URL } from '../URL';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.getItem('token')) {\r\n    setAuthToken(localStorage.getItem('token'));\r\n    console.log(localStorage.getItem('token'));\r\n  }\r\n  try {\r\n    const res = await axios.get(URL + '/api/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// export const loadUser = () => async (dispatch) => {\r\n//   if (localStorage.getItem('token')) {\r\n//     setAuthToken(localStorage.getItem('token'));\r\n//     console.log(localStorage.getItem('token'));\r\n//   }\r\n//   try {\r\n//     const res = await axios.get(URL + '/api/auth');\r\n\r\n//     dispatch({\r\n//       type: USER_LOADED,\r\n//       payload: res.data,\r\n//     });\r\n//   } catch (err) {\r\n//     dispatch({\r\n//       type: AUTH_ERROR,\r\n//     });\r\n//   }\r\n// };\r\n\r\n//Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(URL + '/api/users', body, config);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const body = { email, password };\r\n\r\n  try {\r\n    const res = await axios.post(URL + '/api/auth', body);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}